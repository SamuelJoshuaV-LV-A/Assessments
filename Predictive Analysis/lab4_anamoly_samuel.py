# -*- coding: utf-8 -*-
"""Lab4_anamoly_samuel.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AhwYyb2gzAHblN9OvfUgFoBOt5QHpYqA
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import IsolationForest
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder

df = pd.read_csv('/content/anomaly_train.csv')
df

categ_columns = df.select_dtypes(include='object').columns
categ_columns

scaling = LabelEncoder()
df['Location'] = scaling.fit_transform(df['Location'])

df['Location']

outlier_model = IsolationForest(contamination=0.1, random_state=42)
outliers = outlier_model.fit_predict(df[['Amount','Location']])
df['outlier_find'] = outliers

X = df[['Amount','Location']]
X

Y = df['outlier_find']
Y

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

model = IsolationForest(n_estimators=100, contamination=0.1, max_features=2, max_samples=1000, random_state=42)

model.fit(X_train)

Y_pred = model.predict(X_train)
Y_pred

df["Anamoly_detect"] = model.decision_function(X)

Anamolies = df.loc[df["Anamoly_detect"] < 0]
Anamolies

plt.scatter(df["Amount"], df["Anamoly_detect"], label="NotAnomaly")
plt.show()

