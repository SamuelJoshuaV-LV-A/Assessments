# -*- coding: utf-8 -*-
"""Lab1reg_samuel.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DftPiGtAfQlfNXj8ZWaP4LXfQiDWmkpX
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from scipy.stats import zscore
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
from math import sqrt

df = pd.read_csv('/content/Fare prediction.csv')
df

df.isnull().sum()

df.duplicated().sum()

num_cols = df.select_dtypes(include=['float64','int64']).columns
for i in num_cols:
  sns.boxplot(df[i])
  plt.show()

Q1 = df[num_cols].quantile(0.25)
Q3 = df[num_cols].quantile(0.75)
IQR = Q3 - Q1
lower_bound = Q1-1.5*IQR
upper_bound = Q3+1.5*IQR
outlier = ((df[num_cols]<lower_bound) | (df[num_cols]>upper_bound)).any(axis=1)
df = df[~outlier]
df

categ_cols =  df.select_dtypes(include=['object']).columns.tolist()
categ_cols

data_encoder = pd.get_dummies(df,columns=categ_cols)
data_encoder = data_encoder.astype(int)

numerical = data_encoder.select_dtypes(include=['int']).columns.tolist()
scaling = MinMaxScaler()
data_encoder[numerical] = scaling.fit_transform(data_encoder[numerical])

X = data_encoder.drop(columns='fare_amount')

Y = data_encoder['fare_amount']

X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.2,random_state=42)

model = LinearRegression()

model.fit(X_train,Y_train)

Y_pred = model.predict(X_test)

MSE = mean_squared_error(Y_test, Y_pred)
Rsquare = r2_score(Y_test,Y_pred)

plt.scatter(Y_test,Y_pred)
plt.show()





















