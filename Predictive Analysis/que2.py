# -*- coding: utf-8 -*-
"""Que2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/198tmYY3sKqGvfB70aD-CpwzkGrKeKZry
"""

import pandas as pd
import numpy as np
import seaborn as sns
from matplotlib import pyplot as plt

import warnings
warnings.filterwarnings("ignore")

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler, LabelEncoder, StandardScaler
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score

from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay

df = pd.read_csv('/content/Mall_Customers.csv')
df

df.isnull().sum()

mean1 = df['Annual Income (k$)'].mean()
mean1

df['Annual Income (k$)'] = df['Annual Income (k$)'].fillna(mean1)

df.isnull().sum()

df.duplicated().sum()

#We are choosing Age and Annual income alone because customerID is unique to all and gender being a categorical column does not need to be involved in clustering process
X = df[['Age','Annual Income (k$)']]

elbow = []
silhouette_scores = []
for k in range(2, 11):
    kmeans = KMeans(n_clusters=k)
    kmeans.fit(X)
    elbow.append(kmeans.inertia_)  # Within-cluster sum of squares
    silhouette_scores.append(silhouette_score(X, kmeans.labels_))

plt.figure(figsize=(10, 5))
plt.plot(range(2, 11), elbow, marker='o', linestyle='--')
plt.show()

#n_cluster to be taken as 4

kmeans = KMeans(n_clusters=4)
kmeans.fit(X)

pred = kmeans.predict(X)
pred

df['Cluster'] = pred

for cluster in range(4):
    cluster_data = df[df['Cluster'] == cluster]
    plt.scatter(cluster_data['Age'], cluster_data['Annual Income (k$)'], label=f'Cluster {cluster}')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=300, c='black', marker='*', label='Centroids')
plt.title("Age and income segmentation")
plt.show()

